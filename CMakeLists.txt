CMAKE_MINIMUM_REQUIRED (VERSION 2.6)

MESSAGE(STATUS "Configuring dm-dsp library")

OPTION(FORCE_KISSSFFT "Use KissFFT also on apple" OFF)

SET(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/../dm-cmake)
INCLUDE(SetTargetOptions)
INCLUDE(SetPlatformDefines)
SET_PLATFORM_DEFINES()

SET(USE_KISSFFT TRUE)

IF (APPLE)
  IF (NOT FORCE_KISSSFFT)
    SET(USE_KISSFFT FALSE)
  ENDIF()
ENDIF (APPLE)

IF (USE_KISSFFT)
  SET(DM_FFT_LIB "kissFft" CACHE INTERNAL "Uses kissfft or not" )
  SET(DM_DSP_DEFINE_FRAMEWORK "DSP_USE_KISSFFT 1")
ELSE(USE_KISSFFT)
  SET(DM_FFT_LIB "" CACHE INTERNAL "Uses kissfft or not" )
  SET(DM_DSP_DEFINE_FRAMEWORK "DSP_USE_ACCELERATE 1")
ENDIF(USE_KISSFFT)

#configure DmDspConfig.hpp in the current directory. 
# Add the binary path to the DM_DSP_INCLUDE_DIRECTORIES list.
# keeping the configuration file in the binary directory is the only way 
# to allow me to debug in parallel projects with different settings
CONFIGURE_FILE (
  "${CMAKE_CURRENT_SOURCE_DIR}/include/DmDspConfig.hpp.in"
  "${CMAKE_CURRENT_BINARY_DIR}/DmDspConfig.hpp"
  )
LIST(APPEND DM_DSP_INCLUDE_DIRECTORIES ${CMAKE_CURRENT_BINARY_DIR})
#set DM_DSP_INCLUDE_DIRECTORIES in parent scope if there is one
GET_DIRECTORY_PROPERTY(HAS_PARENT PARENT_DIRECTORY)
if(HAS_PARENT)
  	SET(DM_DSP_INCLUDE_DIRECTORIES "${DM_DSP_INCLUDE_DIRECTORIES}" PARENT_SCOPE)
endif(HAS_PARENT)

FILE(GLOB dm-dsp_src "${CMAKE_CURRENT_SOURCE_DIR}/src/*.*")
FILE(GLOB dm-dsp_inc "${CMAKE_CURRENT_SOURCE_DIR}/include/*.*")


IF (USE_KISSFFT)
  ADD_SUBDIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/../dm-thirdparty/kiss_fft/ "kissfft")
  LIST(APPEND DM_DSP_INCLUDE_DIRECTORIES_INTERNAL ${CMAKE_CURRENT_SOURCE_DIR}/../dm-thirdparty/kiss_fft/include)
  INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../dm-thirdparty/kiss_fft/include)
  SET(DM_DSP_LINK_FLAGS "" CACHE INTERNAL "Linker flags for dm_dsp" )
  SET(DM_DSP_DEFINITIONS "" CACHE INTERNAL "-DDSP_USE_KISSFFT=1" )
ELSE(USE_KISSFFT)
  SET(DM_DSP_LINK_FLAGS "-framework Accelerate" CACHE INTERNAL "Linker flags for dm_dsp" )
  SET(DM_DSP_DEFINITIONS "" CACHE INTERNAL "-DDSP_USE_ACCELERATE=1" )
ENDIF(USE_KISSFFT)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/include)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../dm-log/include)
ADD_LIBRARY(dm-dsp ${dm-dsp_src} ${dm-dsp_inc})
FSET_TARGET_OPTIONS(dm-dsp "")
IF (USE_KISSFFT)
  TARGET_LINK_LIBRARIES(dm-dsp kissFft)
ENDIF(USE_KISSFFT)
ADD_DEFINITIONS(${DM_DSP_DEFINITIONS})
SET(DM_DSP_INCLUDE_DIRECTORIES "${DM_DSP_INCLUDE_DIRECTORIES_INTERNAL}" CACHE INTERNAL "Include directories for dm_dsp")

